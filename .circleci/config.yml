version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@6.7.1
  aws-ecs: circleci/aws-ecs@01.1.0

workflows:
  build-and-deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - dev
                - staging
                - master
      - deploy:
          requires:
            - build
      - hold:
          filters:
            branches:
              only:
                - dev
                - staging
                - master
          type: approval
          requires:
            - deploy
      - aws-ecs/deploy-service-update:
          requires:
            - hold
          family: "nimiapp-${CIRCLE_BRANCH}"
          cluster-name: "nimiapp-${CIRCLE_BRANCH}"
          container-image-name-updates: "container=app,tag=${CIRCLE_SHA1}"
          aws-region: "ap-south-1"
          filters:
            branches:
              only:
                - dev

jobs:
  build:
    docker:
        - image: cimg/node:17.5.0
    working_directory: ~/nimiapp
    steps:
      - checkout
      - save_cache:
          name: Save node modules cache
          paths:
            - node_modules
          key: nimiapp-node-modules-{{ checksum "package.json" }}
      - run:
          name: Install App Dependencies
          command: |
            npm install

  deploy:
    docker:
      - image: docker:17.05.0-ce-git
    working_directory: ~/nimiapp
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          name: Restore node modules cache
          keys:
            - nimiapp-node-modules-{{ checksum "package.json" }}
            - nimiapp-node-modules
      - attach_workspace:
          name: Attach Dist to Workspace
          at: ~/
      - run:
          name: Installing deployment dependencies
          command: |
            apk --no-cache add py-pip
            pip install awscli
      - run:
          name: Create AWS credentials manually
          command: |
            mkdir ~/.aws
            touch ~/.aws/config
            chmod 600 ~/.aws/config
            echo "[profile nail]" > ~/.aws/config
            echo "aws_access_key_id=$AWS_ACCESS_KEY_ID" >> ~/.aws/config
            echo "aws_secret_access_key=$AWS_SECRET_ACCESS_KEY" >> ~/.aws/config
            echo "region=$AWS_REGION" >> ~/.aws/config
      - run:
          name: Deploy to image to ECR
          command: |
            docker build -t nimiapp:latest .
            
            if [ "${CIRCLE_BRANCH}" == "dev" ]; then
              $(aws ecr get-login --region ap-south-1 --no-include-email)
              docker tag nimiapp:latest 849651916005.dkr.ecr.ap-south-1.amazonaws.com/nimiapp-dev:${CIRCLE_SHA1}
              docker push 849651916005.dkr.ecr.ap-south-1.amazonaws.com/nimiapp-dev:${CIRCLE_SHA1}
            fi
